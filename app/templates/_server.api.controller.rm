/**
 * Using Rails-like standard naming convention for endpoints.
 * GET     /<%=entityName%>s              ->  index
 * POST    /<%=entityName%>s              ->  create
 * GET     /<%=entityName%>s/:id          ->  show
 * PUT     /<%=entityName%>s/:id          ->  update
 * DELETE  /<%=entityName%>s/:id          ->  destroy
 */

'use strict';

var _ = require('lodash');
var <%=formalEntityName%> = require('./<%=entityName%>.model');

// Get list of <%=entityName%>s
exports.index = function(req, res) {
  <%=formalEntityName%>.find(function (err, <%=entityName%>s) {
    if(err) { return handleError(res, err); }
    return res.json(200, <%=entityName%>s);
  });
};

// Get a single <%=entityName%>
exports.show = function(req, res) {
  <%=formalEntityName%>.findById(req.params.id, function (err, <%=entityName%>) {
    if(err) { return handleError(res, err); }
    if(!<%=entityName%>) { return res.send(404); }
    return res.json(<%=entityName%>);
  });
};

// Creates a new <%=entityName%> in the DB.
exports.create = function(req, res) {
  <%=formalEntityName%>.create(req.body, function(err, <%=entityName%>) {
    if(err) { return handleError(res, err); }
    return res.json(201, <%=entityName%>);
  });
};

// Updates an existing <%=entityName%> in the DB.
exports.update = function(req, res) {
  if(req.body._id) { delete req.body._id; }
  <%=formalEntityName%>.findById(req.params.id, function (err, <%=entityName%>) {
    if (err) { return handleError(res, err); }
    if(!<%=entityName%>) { return res.send(404); }
    var updated = _.merge(<%=entityName%>, req.body);
    updated.save(function (err) {
      if (err) { return handleError(res, err); }
      return res.json(200, <%=entityName%>);
    });
  });
};

// Deletes a <%=entityName%> from the DB.
exports.destroy = function(req, res) {
  <%=formalEntityName%>.findById(req.params.id, function (err, <%=entityName%>) {
    if(err) { return handleError(res, err); }
    if(!<%=entityName%>) { return res.send(404); }
    <%=entityName%>.remove(function(err) {
      if(err) { return handleError(res, err); }
      return res.send(204);
    });
  });
};

function handleError(res, err) {
  return res.send(500, err);
}